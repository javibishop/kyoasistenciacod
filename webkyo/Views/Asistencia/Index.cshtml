@model IEnumerable<Kyo.Entidades.Alumno>
@Scripts.Render("~/bundles/datepicker")
@{
    ViewBag.Title = "Asistencia de Alumnos";

    List<SelectListItem> turnos = new List<SelectListItem>();
    turnos.Add(new SelectListItem { Text = "Mañana", Value = "0" });
    turnos.Add(new SelectListItem { Text = "Tarde", Value = "1" });
    turnos.Add(new SelectListItem { Text = "Noche", Value = "2" });
    DateTime fecha = DateTime.Now;
}

<div class="page-header">
    <h3>@ViewBag.Title</h3>
</div>

@Html.AntiForgeryToken()
<div class="form-group">
    <div class="col-sm-4">
        @Html.DropDownList("turnos", turnos, "-- Seleccionar Turno --", new { @class = "form-control" })
    </div>
    <div class="col-sm-4">
        <label for="amount">Fecha (Mes/Dia/Año)</label>
        <input type="text" id="date" class="dateinput"/>
    </div>
    <div class="col-sm-4">
        <a href="" onclick="obtenerIds()" class="btn btn-info">
            Marcar Asistencia
            <span class="glyphicon glyphicon glyphicon-ok" aria-hidden="true"></span>
        </a>
    </div>
</div>
<div class="col-md-12 table-responsive">
    <table id="mytable" class="table table-bordred table-striped">
        <thead>
            <tr>

                <th><input type="checkbox" class="checkthis" /></th>
                <th hidden="hidden"></th>
                <th>
                    @Html.DisplayNameFor(model => model.Nombre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Apellido)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Telefono)
                </th>
                <th style="width:5px;"></th>
                <th style="width:5px;"></th>
                <th style="width:5px;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td hidden="hidden">
                        @Html.DisplayFor(modelItem => item.Id, new { htmlAttributes = new { @name = "Id" } })
                    </td>
                    <td>
                        <input type="checkbox" class="checkthis" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Apellido)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Telefono)
                    </td>
                    <td><p data-placement="top" data-toggle="tooltip" title="Detalle"><a class="btn btn-success btn-xs" href="@Url.Action("Details", "Asistencia", new { id = item.Id })"><span class="glyphicon glyphicon-search"></span></a></p></td>
                    <td><p data-placement="top" data-toggle="tooltip" title="Modificar"><a class="btn btn-primary btn-xs" href="@Url.Action("Edit", "Asistencia", new { id = item.Id })"><span class="glyphicon glyphicon-pencil"></span></a></p></td>
                    <td><p data-placement="top" data-toggle="tooltip" title="Borrar"><button class="btn btn-danger btn-xs" data-title="Delete" href="@Url.Action("Delete", "Asistencia", new { id = item.Id })"><span class="glyphicon glyphicon-trash"></span></button></p></td>
                </tr>
            }
        </tbody>
    </table>
</div>
<style>
    #dateinput {
        font-size: 30px;
        padding: 0 20px;
        border: 2px solid #ccc;
        width: 100%;
        color: #666;
        line-height: 3;
        border-radius: 7px;
        font-family: 'PT Sans', sans-serif;
        font-weight: bold;
    }

        #dateinput:focus {
            outline: 0;
        }

        #dateinput.error {
            border-color: #ff0000;
        }

</style>
<script>

    var date = document.getElementById('date');

    function checkValue(str, max) {
        if (str.charAt(0) !== '0' || str == '00') {
            var num = parseInt(str);
            if (isNaN(num) || num <= 0 || num > max) num = 1;
            str = num > parseInt(max.toString().charAt(0)) && num.toString().length == 1 ? '0' + num : num.toString();
        };
        return str;
    };

    date.addEventListener('input', function (e) {
        this.type = 'text';
        var input = this.value;
        if (/\D\/$/.test(input)) input = input.substr(0, input.length - 3);
        var values = input.split('/').map(function (v) {
            return v.replace(/\D/g, '')
        });
        if (values[0]) values[0] = checkValue(values[0], 12);
        if (values[1]) values[1] = checkValue(values[1], 31);
        var output = values.map(function (v, i) {
            return v.length == 2 && i < 2 ? v + ' / ' : v;
        });
        this.value = output.join('').substr(0, 14);
    });

    date.addEventListener('blur', function (e) {
        this.type = 'text';
        var input = this.value;
        var values = input.split('/').map(function (v, i) {
            return v.replace(/\D/g, '')
        });
        var output = '';

        if (values.length == 3) {
            var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);
            var month = parseInt(values[0]) - 1;
            var day = parseInt(values[1]);
            var d = new Date(year, month, day);
            if (!isNaN(d)) {
                var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];
                output = dates.map(function (v) {
                    v = v.toString();
                    return v.length == 1 ? '0' + v : v;
                }).join(' / ');
            };
        };
        this.value = output;
    });
    function obtenerIds() {
        var idAs = [];
     
        var table = document.getElementById('mytable');
        var checkboxes = table.querySelectorAll('input[type=checkbox]');
        for (var i = 1; i < checkboxes.length; i++) {
            if (checkboxes[i].checked) {
                idAs.push(table.rows[i].cells[0].innerText.trim());
            }
        }

        var token = $('[name=__RequestVerificationToken]').val();
        var turno = $('[name=turnos]').val();
        var fecha = $('[name=datepicker]').val();
        var data = { __RequestVerificationToken: token, ids: idAs, turno: turno, fecha: date.value, fechaString: date.value };
        if (idAs.length > 0) {
            $.ajax({
                url: '@Url.Action("GuardarAsistencia", "Asistencia")',
                headers: { '__RequestVerificationToken': token },
                data: JSON.stringify(data),
                type: "POST",
                async: false,
                dataType: 'json',
                contentType:  "application/json; charset=utf-8",
                error: function (response) {
                    alert(response.responseText);
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.responseText);
                    } else {
                        alert(response.responseText);
                    }
                },
                fail: function (response) {
                    alert(response.responseText);
                }
            })
        };
    }

    

    //$(document).ready(function () {
    //    $(".datepicker").datepicker({ dateFormat: 'dd/mm/yy' });
    //});

</script>
